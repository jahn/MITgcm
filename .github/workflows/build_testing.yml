name: build

on:
  push:
  pull_request:

jobs:
 forward:
   runs-on: ubuntu-latest

   strategy:
     matrix:
      include:
        - exp: "1D_ocean_ice_column"
          precs: "16"
        - exp: "adjustment.128x64x1"
          precs: "4"
        - exp: "adjustment.cs-32x32x1"
          precs: "4 0"
        - exp: "advect_cs"
          precs: "16"
        - exp: "advect_xy"
          precs: "14 16"
        - exp: "advect_xz"
          precs: "16 14 12"
        - exp: "aim.5l_cs"
          precs: "14 16"
        - exp: "aim.5l_Equatorial_Channel"
          precs: "13"
        - exp: "aim.5l_LatLon"
          precs: "13"
        - exp: "cfc_example"
          precs: "16"
        - exp: "cheapAML_box"
          precs: "16"
        - exp: "deep_anelastic"
          precs: "12"
        - exp: "dome"
          precs: "13"
        - exp: "exp2"
          precs: "16 1"
        - exp: "exp4"
          precs: "16 16 16"
        - exp: "fizhi-cs-32x32x40"
          precs: "16"
        - exp: "fizhi-cs-aqualev20"
          precs: "16"
        - exp: "fizhi-gridalt-hs"
          precs: "16"
        - exp: "flt_example"
          precs: "16"
        - exp: "front_relax"
          precs: "16 16 16"
        - exp: "global_ocean.90x40x15"
          precs: "16 16 16"
        - exp: "global_ocean.cs32x15"
          precs: "16 16 16 16 16 16"
        - exp: "global_ocean_ebm"
          precs: "16"
        - exp: "global_oce_biogeo_bling"
          precs: "16"
        - exp: "global_with_exf"
          precs: "13 15"
        - exp: "halfpipe_streamice"
          precs: "16"
        - exp: "hs94.128x64x5"
          precs: "9"
        - exp: "hs94.1x64x5"
          precs: "0"
        - exp: "hs94.cs-32x32x5"
          precs: "13 16"
        - exp: "ideal_2D_oce"
          precs: "16"
        - exp: "internal_wave"
          precs: "16 16"
        - exp: "inverted_barometer"
          precs: "0"
        - exp: "isomip"
          precs: "16 16 16 16"
        - exp: "lab_sea"
          precs: "16 16 16 16"
        - exp: "matrix_example"
          precs: "16"
        - exp: "MLAdjust"
          precs: "16 16 16 16 16 16 16"
        - exp: "natl_box"
          precs: "16 16"
        - exp: "offline_exf_seaice"
          precs: "16 16 16 16 16 16 16 16 16"
        - exp: "seaice_itd"
          precs: "16 16 16"
        - exp: "seaice_obcs"
          precs: "13 16 13"
        - exp: "shelfice_2d_remesh"
          precs: "16"
        - exp: "short_surf_wave"
          precs: "16"
        - exp: "so_box_biogeo"
          precs: "16 16"
        - exp: "solid-body.cs-32x32x1"
          precs: "16"
        - exp: "tutorial_advection_in_gyre"
          precs: "16"
        - exp: "tutorial_baroclinic_gyre"
          precs: "16"
        - exp: "tutorial_barotropic_gyre"
          precs: "16"
        - exp: "tutorial_cfc_offline"
          precs: "16"
        - exp: "tutorial_deep_convection"
          precs: "16 16"
        - exp: "tutorial_global_oce_biogeo"
          precs: "16"
        - exp: "tutorial_global_oce_in_p"
          precs: "16"
        - exp: "tutorial_global_oce_latlon"
          precs: "16"
        - exp: "tutorial_held_suarez_cs"
          precs: "16"
        - exp: "tutorial_plume_on_slope"
          precs: "16"
        - exp: "tutorial_reentrant_channel"
          precs: "16"
        - exp: "tutorial_rotating_tank"
          precs: "16"
        - exp: "vermix"
          precs: "16 14 16 1 1 1"

   continue-on-error: true

   steps:

     - name: Checkout
       uses: actions/checkout@v2.2.0

     - name: Set up compilers
       run: |
         sudo apt-get update
         sudo apt-get -qq install gfortran

     - name: Get a docker image and set it running
       run: |
         docker pull mitgcm/testreport-images:ubuntu_18_04_villon
         docker run  -v `pwd`:/MITgcm --name ubuntu_18_04-testreport -t -d mitgcm/testreport-images:ubuntu_18_04_villon /bin/bash

     - name: Run a test
       env:
        MITGCM_EXP: ${{ matrix.exp }}
        MITGCM_PRECS: ${{ matrix.precs }}
       run: |
         . tools/ci/runtr.sh

 openad:
   runs-on: ubuntu-latest

   strategy:
     matrix:
      include:
        - exp: "global_ocean.90x40x15"
          precs: "16"

   continue-on-error: true

   steps:

     - name: Checkout
       uses: actions/checkout@v2.2.0

     - name: Get a docker image and set it running
       run: |
         docker pull mitgcm/mitgcm-openad-test:centos-test
         docker run -i -t -v `pwd`:/MITgcm -d --name openad-testing --ulimit stack=-1:-1 --rm mitgcm/mitgcm-openad-test:centos-test /bin/bash

     - name: Run testreport
       env:
        MITGCM_EXP: ${{ matrix.exp }}
        MITGCM_PRECS: ${{ matrix.precs }}
        MITGCM_DECMD: "docker exec -i openad-testing bash -lc"
        MITGCM_TROPT: "-oad -devel -of=../tools/build_options/linux_amd64_gfortran"
        MITGCM_INPUT_DIR_PAT: '/input_oad.*'
       run: |
         . tools/ci/runtr.sh

 openad-other:
   runs-on: ubuntu-latest
   if: ${{ contains(github.event.pull_request.labels.*.name, 'adjoint') }}

   strategy:
     matrix:
      include:
        - exp: "halfpipe_streamice"
          precs: "16"
        - exp: "hs94.1x64x5"
          precs: "14"
        - exp: "isomip"
          precs: "16"
        - exp: "OpenAD"
          precs: "15 12 16"
        - exp: "tutorial_global_oce_biogeo"
          precs: "16"
        - exp: "tutorial_global_oce_optim"
          precs: "16"
        - exp: "tutorial_tracer_adjsens"
          precs: "16"

   continue-on-error: true

   steps:

     - name: Checkout
       uses: actions/checkout@v2.2.0

     - name: Get a docker image and set it running
       run: |
         docker pull mitgcm/mitgcm-openad-test:centos-test
         docker run -i -t -v `pwd`:/MITgcm -d --name openad-testing --ulimit stack=-1:-1 --rm mitgcm/mitgcm-openad-test:centos-test /bin/bash

     - name: Run testreport
       env:
        MITGCM_EXP: ${{ matrix.exp }}
        MITGCM_PRECS: ${{ matrix.precs }}
        MITGCM_DECMD: "docker exec -i openad-testing bash -lc"
        MITGCM_TROPT: "-oad -devel -of=../tools/build_options/linux_amd64_gfortran"
        MITGCM_INPUT_DIR_PAT: '/input_oad.*'
       run: |
         . tools/ci/runtr.sh

 doc_html:
   runs-on: ubuntu-latest

   continue-on-error: true

   steps:
     - name: Checkout
       uses: actions/checkout@v2.2.0

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: 3.6

     - name: install dependencies
       run: tools/ci/install_doc_dependencies.sh

     - name: build docs
       run: |
         cd doc
         sphinx-build -Wa -b html -d _build_doctrees . _build/html

 doc_latex:
   runs-on: ubuntu-latest

   continue-on-error: true

   steps:
     - name: Checkout
       uses: actions/checkout@v2.2.0

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: 3.6

     - name: install dependencies
       run: tools/ci/install_doc_dependencies.sh

     - name: build docs
       run: |
         cd doc
         make clean latexpdf LATEXOPTS="-interaction=nonstopmode -halt-on-error"
